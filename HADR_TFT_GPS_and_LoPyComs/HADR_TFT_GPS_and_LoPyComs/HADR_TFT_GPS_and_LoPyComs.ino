// Done by Bryan Tee Pak Hong for Team SudoX

#include <MCUFRIEND_kbv.h>
#include <Adafruit_GFX.h>    // Core graphics library
#include <avr/pgmspace.h>
#include <SoftwareSerial.h>
#include <TinyGPS.h>

//========================================================
// Reference for  SudoX
//========================================================
// wiring with ATMega328P-PU:
//--------------POWER Pins--------------------------------
//   5V  connects to DC 5V
//   GND connects to Ground
//--------------LCD Display Pins--------------------------
//   LCD_RD     connects to Analog pin A0
//   LCD_WR     connects to Analog pin A1
//   LCD_RS     connects to Analog pin A2
//   LCD_CS     connects to Analog pin A3
//   LCD_RST    connects to Analog pin A4
//   LCD_D0     connects to digital pin 8
//   LCD_D1     connects to digital pin 9
//   LCD_D2     connects to digital pin 2
//   LCD_D3     connects to digital pin 3
//   LCD_D4     connects to digital pin 4
//   LCD_D5     connects to digital pin 5
//   LCD_D6     connects to digital pin 6
//   LCD_D7     connects to digital pin 7
//   GPS TX     connects to digital pin 13
//   GPS RX     connects to digital pin 12
//   LR buttons connects to Analog pin A5
//   CONFIRM    connects to digital pin 11
//==========================================================

// These are important pins (for TFT LCD screen)
//----------------------------------------------------------
#define LCD_RESET A4
#define LCD_CS A3
#define LCD_CD A2
#define LCD_WR A1
#define LCD_RD A0
//Pins 2-9 are also occupied by LCD screen
//----------------------------------------------------------

// Assign human-readable names to some common 16-bit color values:
#define BLACK   0x0000
#define BLUE    0x001F
#define RED     0xF800
#define GREEN   0x03E0
#define CYAN    0x07FF
#define MAGENTA 0xF81F
#define YELLOW  0xFFE0
#define WHITE   0xFFFF
#define ORANGE  0xF980

// Defining input buttons for selection:
#define BUTTON A5
#define CONFIRM 11 

// Defining other constants
#define TRANSMIT_TIME 5000 // in ms
#define IDLE_TIME 30000 // in ms
#define ON 0 // default on state

// Defining device ID
#define DEVICE_ID 0

// defining some bitmaps
// 'firstaid', 100x100px
const unsigned char medical [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff,
  0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xf0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00,
  0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0,
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x7f,
  0xff, 0xff, 0xf8, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf0,
  0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff,
  0xf8, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x03,
  0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff,
  0xe3, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff,
  0xf8, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x07, 0xf8, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8,
  0x01, 0xfe, 0x00, 0x0f, 0xf0, 0x0c, 0x00, 0x01, 0xff, 0xff, 0xf8, 0x01, 0x80, 0x00, 0xff, 0x00,
  0x0f, 0xc3, 0xfc, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x78, 0x7f, 0x00, 0x0f, 0xc0, 0x0c,
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x7f, 0x00, 0x1f, 0xc0, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0x80, 0x00, 0x7f, 0x80, 0x1f, 0xc0, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x80, 0x00, 0x7f, 0x80, 0x1f, 0xc0, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x7f,
  0x80, 0x3f, 0xc0, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x7f, 0xc0, 0x3f, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x3f, 0xc0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x3f, 0xf8, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xc0, 0x03, 0xff, 0xc0, 0x7f, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x03,
  0xff, 0xe0, 0x7f, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xff, 0xe0, 0x7f,
  0xfc, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xff, 0xe0, 0x7f, 0xfc, 0x00, 0xfc,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xff, 0xe0, 0x7f, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0x00,
  0x00, 0x07, 0xe0, 0x03, 0xff, 0xe0, 0x7f, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0xe0, 0x00, 0x07, 0xe0,
  0x03, 0xff, 0xe0, 0x7f, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0xf0, 0x00, 0x07, 0xe0, 0x07, 0xff, 0xe0,
  0x7f, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0xf0, 0x00, 0x07, 0xe0, 0x07, 0xff, 0xe0, 0x7f, 0xfc, 0x00,
  0xfc, 0x00, 0x00, 0xf0, 0x00, 0x07, 0xe0, 0x07, 0xff, 0xe0, 0x7f, 0xfc, 0x00, 0xfc, 0x00, 0x00,
  0xf0, 0x00, 0x07, 0xe0, 0x07, 0xff, 0xe0, 0x7f, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0xf0, 0x00, 0x07,
  0xe0, 0x07, 0xff, 0xe0, 0x7f, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0xf0, 0x00, 0x07, 0xe0, 0x07, 0xff,
  0xe0, 0x7f, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0xe0, 0x00, 0x07, 0xe0, 0x03, 0xff, 0xe0, 0x7f, 0xfc,
  0x00, 0xfc, 0x00, 0xff, 0xf7, 0xe0, 0x07, 0xe0, 0x07, 0xff, 0xe0, 0x7f, 0xfe, 0x00, 0xfc, 0x00,
  0xff, 0xff, 0xf0, 0x07, 0xe0, 0x07, 0xff, 0xe0, 0x7f, 0xfe, 0x00, 0xfc, 0x00, 0xff, 0xff, 0xf0,
  0x07, 0xe0, 0x07, 0xff, 0xe0, 0x7f, 0xfe, 0x00, 0xfc, 0x00, 0xff, 0xff, 0xf0, 0x07, 0xc0, 0x07,
  0xff, 0xe0, 0x7f, 0xfe, 0x00, 0xfc, 0x00, 0x00, 0xf0, 0x00, 0x07, 0xc0, 0x07, 0xff, 0xe0, 0x3f,
  0xfe, 0x00, 0xfc, 0x00, 0x00, 0xe0, 0x00, 0x07, 0xc0, 0x07, 0xff, 0xc0, 0x3f, 0xfe, 0x00, 0xfc,
  0x00, 0x00, 0xf0, 0x00, 0x07, 0xc0, 0x07, 0xff, 0xc0, 0x3f, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0xf0,
  0x00, 0x07, 0xc0, 0x07, 0xff, 0xc0, 0x3f, 0xfe, 0x00, 0x7c, 0x00, 0x00, 0xf0, 0x00, 0x07, 0xc0,
  0x07, 0xff, 0xc0, 0x1f, 0xfe, 0x00, 0x7c, 0x00, 0x00, 0xf0, 0x00, 0x07, 0xc0, 0x07, 0xff, 0x80,
  0x1f, 0xfe, 0x00, 0x7c, 0x00, 0x00, 0xf0, 0x00, 0x07, 0xc0, 0x07, 0xff, 0x80, 0x1f, 0xfe, 0x00,
  0x7c, 0x00, 0x00, 0xf0, 0x00, 0x07, 0xc0, 0x0f, 0xff, 0x80, 0x0f, 0xfe, 0x00, 0x7c, 0x00, 0x00,
  0x00, 0x00, 0x07, 0xc0, 0x0f, 0xff, 0x80, 0x0f, 0xfe, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x07,
  0xc0, 0x0f, 0xff, 0x00, 0x0f, 0xfe, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x0f, 0xff,
  0x00, 0x07, 0xfe, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x0f, 0xfe, 0x00, 0x07, 0xfe,
  0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x0f, 0xfe, 0x00, 0x03, 0xfe, 0x00, 0x78, 0x00,
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x0f, 0xfc, 0x00, 0x03, 0xfe, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00,
  0x03, 0xc0, 0x0f, 0xfc, 0x00, 0x01, 0xfe, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0f,
  0xf8, 0x00, 0x01, 0xfe, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00,
  0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0xfe, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x7f, 0x80, 0x00, 0xff, 0xff, 0xff,
  0xff, 0xf0, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x0f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xfc, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
  0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};

const byte shelter[] PROGMEM = {// 'shelter', 100x100px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff,
  0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xf0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00,
  0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff,
  0x0f, 0xff, 0xe0, 0x03, 0xff, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xc0,
  0x01, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xc0, 0x01, 0xff, 0xc0,
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x7f, 0xc0, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x7f,
  0xff, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xc0, 0x01, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0xc0, 0x00, 0x1f, 0xc0, 0x01, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x0f,
  0xc0, 0x01, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x07, 0xc0, 0x01, 0xff,
  0xf8, 0x00, 0x01, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x01, 0xc0, 0x01, 0xff, 0xf8, 0x00, 0x03,
  0xff, 0xff, 0xff, 0xf8, 0x00, 0x60, 0x00, 0xc0, 0x01, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff,
  0xf0, 0x00, 0xf0, 0x00, 0x40, 0x01, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xfc,
  0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xff, 0x80, 0x03, 0xfe, 0x00, 0x00, 0x01,
  0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x00, 0x07, 0xdf, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00,
  0x0f, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0x0f, 0x80, 0x00, 0x01, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff,
  0xfc, 0x00, 0x3e, 0x03, 0xc0, 0x00, 0x01, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x7c,
  0x01, 0xf0, 0x00, 0x01, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xe0, 0x00, 0xf8, 0x00, 0xf8, 0x00,
  0x01, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xc0, 0x01, 0xf0, 0x00, 0x7c, 0x00, 0x01, 0xff, 0xff,
  0x80, 0x3f, 0xff, 0xff, 0x80, 0x07, 0xc0, 0x00, 0x3e, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x3f, 0xff,
  0xff, 0x00, 0x0f, 0x80, 0x00, 0x0f, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xfe, 0x00, 0x1f,
  0x00, 0x00, 0x07, 0xc0, 0x01, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xf8, 0x00, 0x3e, 0x00, 0x00, 0x03,
  0xe0, 0x01, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xf0, 0x00, 0x78, 0x00, 0x00, 0x01, 0xf0, 0x00, 0xff,
  0xff, 0xe0, 0x7f, 0xff, 0xe0, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x78, 0x00, 0x3f, 0xff, 0xe0, 0x7f,
  0xff, 0xc0, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x1f, 0xff, 0xe0, 0x7f, 0xff, 0x80, 0x07,
  0xc0, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x0f, 0xff, 0xe0, 0x7f, 0xfe, 0x00, 0x0f, 0x80, 0x00, 0x00,
  0x00, 0x0f, 0x80, 0x07, 0xff, 0xe0, 0x7f, 0xfc, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0,
  0x01, 0xff, 0xe0, 0x7f, 0xf8, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0xff, 0xe0,
  0x7f, 0xf0, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x7f, 0xe0, 0x7f, 0xe0, 0x01,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x3f, 0xe0, 0x7f, 0xe0, 0x03, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x3e, 0x00, 0x3f, 0xe0, 0x7f, 0xe0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0x00, 0x7f, 0xe0, 0x7f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0xff,
  0xe0, 0x7f, 0xf8, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0xff, 0xe0, 0x7f, 0xfc,
  0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf1, 0xff, 0xe0, 0x7f, 0xff, 0xfc, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff,
  0xff, 0xe0, 0x7f, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x3f,
  0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xfc, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01,
  0xff, 0xff, 0xc0, 0x1f, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80,
  0x1f, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc,
  0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xfc, 0x00, 0x00, 0x0f,
  0xff, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00,
  0x01, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xff,
  0x00, 0x07, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x07, 0xff,
  0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00,
  0x0f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00,
  0x00, 0x01, 0xff, 0xfc, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01, 0xff,
  0xf8, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xf8, 0x00, 0x00,
  0xff, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xfc, 0x00,
  0x00, 0x0f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x0f, 0xff,
  0x00, 0x00, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x01,
  0xff, 0xc0, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x00,
  0x00, 0x1f, 0xfe, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x0f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xfc, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
  0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};

// 'ration', 100x100px
const unsigned char ration [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff,
  0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x20, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x10, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x08, 0x00, 0x00,
  0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x0c, 0x00, 0x00, 0x00, 0x07, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xfe, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x00, 0xff, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xff, 0xc0,
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 0x00, 0x00, 0x7f,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xf8, 0x3f, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff,
  0xf8, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xf8, 0x00, 0x03,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
  0x07, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00,
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x0f, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x1f,
  0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x3f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff,
  0xff, 0x80, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x3f, 0xff, 0xfe, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x3f, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x70,
  0x00, 0x00, 0x3f, 0xff, 0xc0, 0x7f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x3f,
  0xff, 0xe0, 0x7f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x7f,
  0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff, 0xe0, 0x00,
  0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
  0x3f, 0xff, 0xe0, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x3f, 0xff, 0xe0,
  0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x80, 0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0,
  0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x3f, 0xff,
  0xe0, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x00, 0x3f, 0xff, 0xe0, 0x7f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x3f,
  0xff, 0xe0, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x3f, 0xff, 0xe0, 0x3f,
  0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x3f, 0xff, 0xc0, 0x3f, 0xff, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x3f, 0xff, 0xc0, 0x3f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x80, 0x00, 0x3f, 0xff, 0xc0, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00,
  0x3f, 0xff, 0xc0, 0x1f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x3f, 0xff, 0x80,
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0x80, 0x1f, 0xff, 0xfc,
  0xff, 0x9f, 0xf3, 0xfc, 0xff, 0x80, 0x00, 0x3f, 0xff, 0x80, 0x0f, 0xff, 0xf0, 0x1c, 0x03, 0x80,
  0xf0, 0x1f, 0x80, 0x00, 0x3f, 0xff, 0x00, 0x0f, 0xff, 0xc0, 0x08, 0x01, 0x00, 0x20, 0x0f, 0x80,
  0x00, 0x3f, 0xff, 0x00, 0x0f, 0xff, 0xc1, 0x00, 0x60, 0x08, 0x01, 0x07, 0x80, 0x00, 0x3f, 0xff,
  0x00, 0x07, 0xff, 0x87, 0xc0, 0xf0, 0x1e, 0x07, 0xc3, 0x80, 0x00, 0x3f, 0xfe, 0x00, 0x07, 0xff,
  0x87, 0xc1, 0xf8, 0x3e, 0x07, 0xc3, 0x80, 0x00, 0x3f, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xfc, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff,
  0xf8, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x03, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff,
  0xff, 0xc0, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xc0, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x0f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xfc, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f,
  0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};

// 'transparent_sq', 104x104px
const unsigned char transSq [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

//==============================================================================================
//Prototype functions
//==============================================================================================
void normalDisplay(void);
void optionSelectionUI(void);
void gpsGetCoordinates(void);
String encodeMessage(String);
String parseMessage(String, byte);
// Some functions for optionSelectUI
void selectShelter(int);
void deselectShelter(void);
void selectRation(int);
void deselectRation(void);
void selectMedical(int);
void deselectMedical(void);
void callLopy(unsigned long wakeTime);
void readLopy(void);
//==============================================================================================

//==============================================================================================
// Global variables
//==============================================================================================

MCUFRIEND_kbv tft;
byte Message = 11, c_Message = 11;
String broadcastMessage = "", requestStatus = "";
SoftwareSerial gpsSerial (13, 12); //13 to GPS TX, 12 tp GPS RX
TinyGPS gps;
String msgStatus = "0";
float flat = 0;
float flon = 0;
unsigned long fix_age = 1, time = 1, date = 1; // returns +- latitude/longitude in degrees
unsigned long screenOn = millis();
String temp;
char c;
int i = 0;
//==============================================================================================

void setup() {
  gpsSerial.begin(9600);
  Serial.begin(9600);
  tft.reset();
  uint16_t identifier = tft.readID();
  tft.begin(identifier);
  tft.fillScreen(BLACK);
  tft.setRotation(3);
  tft.setCursor(5, 25);
  tft.setTextColor(WHITE);
  tft.setTextSize(4);
  // Write HELP IS HERE!
  tft.println("HELP IS HERE!");
  normalDisplay();

  //Listening to LoPy, code here must change!
  // first edits done on 30/12/2018
  // second edits done on 31/12/2018 ==> changed software serial lopy to hardware serial
  Serial.write("OK");
   while (((c = Serial.read()) != '#')&&(i < 500))i++;
   i = 0;
  while (((c = Serial.read()) != '#')&& i < 500) {
    temp += c;
    i++;
  }
  i = 0;
  Message = parseMessage(temp, 0).toInt();

  pinMode(BUTTON, INPUT); // reading different voltage levels as left and right
  pinMode(CONFIRM, INPUT); // sending this message to lopy
  tft.setTextSize(2);


  if (Message == 0) {
    selectShelter(WHITE);
  }
  else if (Message == 1) {
    selectRation(WHITE);
  }
  else if (Message == 2) {
    selectMedical(WHITE);
  }
  tft.setCursor(80, 180);
  tft.print("Message:");
  tft.print(Message);
}

void loop() {
  if ((millis() % 5000) == 0) {
    gpsGetCoordinates();
    screenOn = (millis() - screenOn) / IDLE_TIME;
    callLopy();
    readLopy();
  }
  optionSelectionUI();
}

void normalDisplay() {
  // We draw 3 circles horizontal in the screen with the icons
  // size R = 51, distance betwen each circle is 10
  
  // 1st circle(shelter)
  tft.fillRoundRect(2, tft.height() / 2 - 51, 102, 102, 51, BLUE);
  tft.drawBitmap(3, tft.height() / 2 - 50 , shelter, 100, 100, WHITE);
  
  //2nd circle(ration)
  tft.fillRoundRect(100 + 8, tft.height() / 2 - 51, 102, 102, 51, GREEN);
  tft.drawBitmap(100 + 9, tft.height() / 2 - 50 , ration, 100, 100, WHITE);
  
  //3rd round circle(medical)
  tft.fillRoundRect(200 + 14, tft.height() / 2 - 51, 102, 102, 51, RED);
  tft.drawBitmap(200 + 15, tft.height() / 2 - 50 , medical, 100, 100, WHITE);
}

void optionSelectionUI() {

  // left right scrolling
  if (analogRead(BUTTON) > 100) {
    screenOn = millis(); // reset time to sleep
    if (analogRead(BUTTON) < 700) {
      tft.setCursor(90, 180);
      if (Message == 0) {
        deselectShelter();
        selectRation(WHITE);
        Message = 1;
      } else if (Message == 1) {
        deselectRation();
        selectMedical(WHITE);
        Message = 2;
      } else if (Message == 2) {
        //Message = selectLeft();
        deselectMedical();
        selectShelter(WHITE);
        Message = 0;
      }
      tft.fillRoundRect(90, 180, 180, 60, 0, BLACK);
    } else if (analogRead(BUTTON) >= 700) {
      if (Message == 0) {
        deselectShelter();
        selectMedical(WHITE);
        Message = 2;
      } else if (Message == 2) {
        deselectMedical();
        selectRation(WHITE);
        Message = 1;
      } else if (Message == 1) {
        deselectRation();
        selectShelter(WHITE);
        Message = 0;
      }
      tft.fillRoundRect(90, 180, 180, 60, 0, BLACK);
    }
  }
  else if (digitalRead(CONFIRM)) {
    screenOn = millis(); // reset sleep time
    tft.fillRoundRect(90, 180, 180, 60, 0, BLACK);
    c_Message = Message;
    //delay(100);
    // some code to show it has been confirmed
  }
  // this part is for debugging purposes
  tft.setCursor(80, 180);
  tft.print("Message:");
  tft.print(c_Message);
  tft.setCursor(10,200);
  tft.print(broadcastMessage);
  //delay(100);
}

void selectShelter(int color) {
  tft.drawBitmap(2, tft.height() / 2 - 52 , transSq, 104, 104, color);
}

void deselectShelter() {
  tft.drawBitmap(2, tft.height() / 2 - 52 , transSq, 104, 104, BLACK);
}

void selectRation(int color) {
  tft.drawBitmap(108, tft.height() / 2 - 52 , transSq, 104, 104, color);
}

void deselectRation() {
  tft.drawBitmap(108, tft.height() / 2 - 52 , transSq, 104, 104, BLACK);
}

void selectMedical(int color) {
  tft.drawBitmap(213, tft.height() / 2 - 52  , transSq, 104, 104, color);
}

void deselectMedical() {
  tft.drawBitmap(213, tft.height() / 2 - 52  , transSq, 104, 104, BLACK);
}

void gpsGetCoordinates() {
  // only gives accurate dates if gpsSerial is available
  if (gpsSerial.available()) {
    gps.f_get_position(&flat, &flon, &fix_age);
    gps.get_datetime(&date, &time, &fix_age);
  }
}

void callLopy() {
  Serial.print(encodeMessage());
}

void readLopy() {
  String buffer;
  while (((c = Serial.read()) != '#')&& i <500)i++;
  i = 0;
  while (((c = Serial.read()) != '#')&& i <500) {
    temp += c;
    i++;
  }
  i = 0;
  buffer = temp;
  c_Message = parseMessage(buffer, 0).toInt();
  broadcastMessage = parseMessage(buffer, 1);
  requestStatus = parseMessage(buffer, 2); // remember to save P I C as strings!
  delay(100);
}

// Format of the string from lopy to Arduino is
/*
   "Selection,broadcast,status"(this is what the arduino sees)
   "Device ID, dd/mm/yy hh:mm,latitude, longitude, resource, screenOn
*/

String encodeMessage() {
  // "Device ID, dd/mm/yy hh:mm,latitude, longitude, resourceid, screenUp
  String buffer = "#" + String(DEVICE_ID) + "," + String(date) + " " + String(time) + "," + String(flat) + "," + String(flon) + "," + String(c_Message) + "," + String(screenOn) + "#";
  return buffer;
}

String parseMessage(String rawMessage, byte index) {
  // "Selection,broadcast,status"
  byte commaNum = 0, startNum = 0;
  String buffer;
  if ( index != 2) {
    for (int i = 0; i < index + 1; i++) {
      commaNum = rawMessage.indexOf(",", startNum);
      buffer = rawMessage.substring(startNum, commaNum);
      startNum = commaNum + 1;
    }
  }
  else {
    for (int i = 0; i < 2; i++) {
      commaNum = rawMessage.indexOf(",", startNum);
      buffer = rawMessage.substring(startNum, commaNum);
      startNum = commaNum + 1;
    }
    buffer = rawMessage.charAt(startNum);
  }
  return buffer;
}

